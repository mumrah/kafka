org.apache.kafka.connect.transforms.CastTest:
- castFieldWithDefaultValueRecordWithSchema
- castFieldsSchemaless
- castFieldsWithSchema
- castLogicalToPrimitive
- castLogicalToString
- castNullKeyRecordSchemaless
- castNullKeyRecordWithSchema
- castNullValueRecordSchemaless
- castNullValueRecordWithSchema
- castWholeBigDecimalRecordValueWithSchemaString
- castWholeDateRecordValueWithSchemaString
- castWholeRecordDefaultValue
- castWholeRecordKeySchemaless
- castWholeRecordKeyWithSchema
- castWholeRecordValueSchemalessBooleanFalse
- castWholeRecordValueSchemalessBooleanTrue
- castWholeRecordValueSchemalessFloat32
- castWholeRecordValueSchemalessFloat64
- castWholeRecordValueSchemalessInt16
- castWholeRecordValueSchemalessInt32
- castWholeRecordValueSchemalessInt64
- castWholeRecordValueSchemalessInt8
- castWholeRecordValueSchemalessString
- castWholeRecordValueSchemalessUnsupportedType
- castWholeRecordValueWithSchemaBooleanFalse
- castWholeRecordValueWithSchemaBooleanTrue
- castWholeRecordValueWithSchemaFloat32
- castWholeRecordValueWithSchemaFloat64
- castWholeRecordValueWithSchemaInt16
- castWholeRecordValueWithSchemaInt32
- castWholeRecordValueWithSchemaInt64
- castWholeRecordValueWithSchemaInt8
- castWholeRecordValueWithSchemaString
- testCastVersionRetrievedFromAppInfoParser
- testConfigEmpty
- testConfigInvalidMap
- testConfigInvalidSchemaType
- testConfigInvalidTargetType
- testConfigMixWholeAndFieldTransformation
- testUnsupportedTargetType
org.apache.kafka.connect.transforms.DropHeadersTest:
- configRejectsEmptyList
- dropExistingHeader
- dropExistingHeaderWithMultipleValues
- dropNonExistingHeader
- testDropHeadersVersionRetrievedFromAppInfoParser
org.apache.kafka.connect.transforms.ExtractFieldTest:
- nonExistentFieldSchemalessShouldReturnNull
- nonExistentFieldWithSchemaShouldFail
- nonExistentNestedFieldSchemalessShouldReturnNull
- nonExistentNestedFieldWithSchemaShouldFail
- nullSchemaless
- schemaless
- schemalessAndNestedPath
- testExtractFieldVersionRetrievedFromAppInfoParser
- testNullWithSchema
- testUnsetOptionalField
- testUnsetOptionalKey
- withSchema
- withSchemaAndNestedPath
org.apache.kafka.connect.transforms.FlattenTest:
- testArrayWithSchema
- testFlattenVersionRetrievedFromAppInfoParser
- testKey
- testMapWithNullFields
- testNestedMapWithDelimiter
- testNestedStruct
- testOptionalAndDefaultValuesNested
- testOptionalFieldMap
- testOptionalFieldStruct
- testOptionalNestedStruct
- testOptionalStruct
- testSchemalessArray
- testStructWithNullFields
- tombstoneEventWithSchemaShouldPassThrough
- tombstoneEventWithoutSchemaShouldPassThrough
- topLevelMapRequired
- topLevelStructRequired
org.apache.kafka.connect.transforms.HeaderFromTest:
- invalidConfigEmptyHeadersAndFieldsConfig
- invalidConfigExtraFieldConfig
- invalidConfigExtraHeaderConfig
- schemaless
- withSchema
org.apache.kafka.connect.transforms.HoistFieldTest:
- schemaless
- testHoistFieldVersionRetrievedFromAppInfoParser
- testSchemalessMapIsMutable
- withSchema
org.apache.kafka.connect.transforms.InsertFieldTest:
- copySchemaAndInsertConfiguredFields
- insertConfiguredFieldsIntoTombstoneEventWithSchemaLeavesValueUnchanged
- insertConfiguredFieldsIntoTombstoneEventWithoutSchemaLeavesValueUnchanged
- insertIntoNullKeyLeavesRecordUnchanged
- insertKeyFieldsIntoTombstoneEvent
- schemalessInsertConfiguredFields
- testInsertFieldVersionRetrievedFromAppInfoParser
- testUnsetOptionalField
- topLevelStructRequired
org.apache.kafka.connect.transforms.InsertHeaderTest:
- configRejectsNullHeaderKey
- configRejectsNullHeaderValue
- insertionWithByteHeader
- insertionWithExistingOtherHeader
- insertionWithExistingSameHeader
- testInsertHeaderVersionRetrievedFromAppInfoParser
org.apache.kafka.connect.transforms.MaskFieldTest:
- testEmptyStringReplacementValue
- testMaskFieldReturnsVersionFromAppInfoParser
- testNullListAndMapReplacementsAreMutable
- testReplacementTypeMismatch
- testSchemaless
- testSchemalessUnsupportedReplacementType
- testSchemalessWithReplacement
- testWithSchema
- testWithSchemaAndReplacement
- testWithSchemaUnsupportedReplacementType
org.apache.kafka.connect.transforms.RegexRouterTest:
- addPrefix
- addSuffix
- doesntMatch
- identity
- slice
- staticReplacement
- testRegexRouterRetrievesVersionFromAppInfoParser
org.apache.kafka.connect.transforms.ReplaceFieldTest:
- schemaless
- testExcludeBackwardsCompatibility
- testIncludeBackwardsCompatibility
- testReplaceFieldVersionRetrievedFromAppInfoParser
- testReplaceNullWithDefaultConfigOnKey
- testReplaceNullWithDefaultConfigOnValue
- tombstoneSchemaless
- tombstoneWithSchema
- withSchema
org.apache.kafka.connect.transforms.SetSchemaMetadataTest:
- ignoreRecordWithNullValue
- schemaNameAndVersionUpdate
- schemaNameAndVersionUpdateWithStruct
- schemaNameAndVersionUpdateWithStructAndNullField
- schemaNameUpdate
- schemaVersionUpdate
- testSchemaMetadataVersionRetrievedFromAppInfoParser
- updateSchemaOfNonStruct
- updateSchemaOfNull
- updateSchemaOfStruct
- valueSchemaRequired
org.apache.kafka.connect.transforms.TimestampConverterTest:
- testConfigInvalidFormat
- testConfigInvalidTargetType
- testConfigInvalidUnixPrecision
- testConfigMissingFormat
- testConfigNoTargetType
- testConfigValidUnixPrecision
- testKey
- testSchemalessDateToTimestamp
- testSchemalessFieldConversion
- testSchemalessIdentity
- testSchemalessNullValueToDate
- testSchemalessNullValueToString
- testSchemalessNullValueToTime
- testSchemalessNullValueToTimestamp
- testSchemalessNullValueToUnix
- testSchemalessStringToTimestamp
- testSchemalessStringToUnix
- testSchemalessTimeToTimestamp
- testSchemalessTimestampToDate
- testSchemalessTimestampToString
- testSchemalessTimestampToTime
- testSchemalessTimestampToUnix
- testSchemalessUnixToTimestamp
- testTimestampConverterVersionRetrievedFromAppInfoParser
- testWithSchemaDateToTimestamp
- testWithSchemaFieldConversion
- testWithSchemaIdentity
- testWithSchemaNullFieldToDate
- testWithSchemaNullFieldToString
- testWithSchemaNullFieldToTime
- testWithSchemaNullFieldToTimestamp
- testWithSchemaNullFieldToUnix
- testWithSchemaNullFieldWithDefaultConversion
- testWithSchemaNullValueToDate
- testWithSchemaNullValueToString
- testWithSchemaNullValueToTime
- testWithSchemaNullValueToTimestamp
- testWithSchemaNullValueToUnix
- testWithSchemaStringToTimestamp
- testWithSchemaTimeToTimestamp
- testWithSchemaTimestampToDate
- testWithSchemaTimestampToString
- testWithSchemaTimestampToTime
- testWithSchemaTimestampToUnix
- testWithSchemaUnixToTimestamp
org.apache.kafka.connect.transforms.TimestampRouterTest:
- defaultConfiguration
- testTimestampRouterVersionRetrievedFromAppInfoParser
org.apache.kafka.connect.transforms.ValueToKeyTest:
- nonExistingField
- schemaless
- testReplaceNullWithDefaultConfig
- testValueToKeyVersionRetrievedFromAppInfoParser
- withSchema
org.apache.kafka.connect.transforms.field.FieldPathNotationTest:
- shouldBuildV1WithDotsAndBacktickPair
- shouldBuildV2AndEscapeBackticks
- shouldBuildV2AndIgnoreBackticksThatAreNotWrapping
- shouldBuildV2WhenIncludesDots
- shouldBuildV2WhenIncludesDotsAndBacktickPair
- shouldBuildV2WithEmptyPath
- shouldBuildV2WithoutDots
- shouldBuildV2WithoutWrappingBackticks
- shouldFailV2WhenIncompleteBackticks
- shouldIncludeEmptyFieldNames
org.apache.kafka.connect.transforms.field.FieldSyntaxVersionTest:
- shouldAppendConfigToDef
- shouldFailWhenAppendConfigToDefAgain
- shouldFailWhenWrongVersionIsPassed
- shouldGetVersionFromConfig
org.apache.kafka.connect.transforms.field.SingleFieldPathTest:
- shouldFindField
- shouldFindValueInMap
- shouldFindValueInStruct
- shouldReturnNullFieldWhenFieldNotFound
- shouldReturnNullValueWhenFieldNotFoundInMap
- shouldReturnNullValueWhenFieldNotFoundInStruct
org.apache.kafka.connect.transforms.predicates.HasHeaderKeyTest:
- testConfig
- testNameMayNotBeEmptyInConfig
- testNameRequiredInConfig
- testTest
org.apache.kafka.connect.transforms.predicates.TopicNameMatchesTest:
- testConfig
- testPatternIsValidRegexInConfig
- testPatternMayNotBeEmptyInConfig
- testPatternRequiredInConfig
- testTest
org.apache.kafka.connect.transforms.util.NonEmptyListValidatorTest:
- testEmptyList
- testNullList
- testValidList
